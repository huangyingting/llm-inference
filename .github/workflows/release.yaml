name: release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        default: 'v0.0.0-dev'
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: check tag format
      run: |
        if [[ "${{ github.event.inputs.tag }}" =~ ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$ ]]; then
          echo "Tag format is valid."
        else
          echo "Invalid tag format: ${{ github.event.inputs.tag }}"
          exit 1
        fi

    - name: create github release tag
      run: |
        if git rev-parse -q --verify "refs/tags/${{ github.event.inputs.tag  }}"; then
           echo "Tag ${{ github.event.inputs.tag  }} already exist. Exiting workflow."
           exit 1
        else
           gh release create ${{ github.event.inputs.tag }} --title "MCAD ${{ github.event.inputs.tag  }} Release" --generate-notes --target ${{ github.ref }}
        fi
      env:
        GITHUB_TOKEN: ${{ github.token }}

  build-and-push-image:
    name: build and push images
    needs: release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./vllm/Dockerfile
            image: ${{ github.repository }}-vllm
          - dockerfile: ./localai/Dockerfile
            image: ${{ github.repository }}-localai
    permissions:
      contents: read
      packages: write

    steps:
      - name: free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # when set to "true" but frees about 6 GB
          tool-cache: true
      - name: checkout
        uses: actions/checkout@v3

      - name: login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}

      - name: build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: VERSION=${{ github.ref_name }}